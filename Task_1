#include <iostream>   // Подключаем заголовочный файл для работы с вводом и выводом через консоль.
#include <fstream>    // Подключаем заголовочный файл для работы с файлами.
#include <string>     // Подключаем заголовочный файл для работы со строками.

// Структура, которую мы будем записывать и читать из файла
struct Person {
    std::string name;  // Поле для хранения имени (строка).
    int age;           // Поле для хранения возраста (целое число).
};

int main() {
    // Пример записи структуры в файл
    {
        std::ofstream outFile("people.dat", std::ios::binary);  // Открываем файл для записи в бинарном режиме.
        if (outFile.is_open()) {  // Проверяем, успешно ли открыт файл для записи.
            Person person = {"Alice", 30};  // Создаем объект структуры Person с определенными значениями.
            outFile.write(reinterpret_cast<char*>(&person), sizeof(Person));  // Записываем структуру в файл в бинарном формате.
            outFile.close();  // Закрываем файл после записи.
        } else {
            std::cerr << "Не удалось открыть файл для записи." << std::endl;  // Если файл не удалось открыть, выводим ошибку.
        }
    }

    // Пример чтения структуры из файла
    {
        std::ifstream inFile("people.dat", std::ios::binary);  // Открываем файл для чтения в бинарном режиме.
        if (inFile.is_open()) {  // Проверяем, успешно ли открыт файл для чтения.
            Person person;  // Создаем объект структуры Person для хранения считанных данных.
            inFile.read(reinterpret_cast<char*>(&person), sizeof(Person));  // Читаем данные из файла в объект структуры.
            std::cout << "Имя: " << person.name << ", Возраст: " << person.age << std::endl;  // Выводим считанные данные.
            inFile.close();  // Закрываем файл после чтения.
        } else {
            std::cerr << "Не удалось открыть файл для чтения." << std::endl;  // Если файл не удалось открыть, выводим ошибку.
        }
    }

    return 0;  // Возвращаем ноль, что обозначает успешное завершение программы.
}
